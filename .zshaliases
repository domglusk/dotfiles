#!/bin/zsh
# Aliases
alias lsd="lsd --sort extension --group-directories-first -h -A"
alias spotify="flatpak run com.spotify.Client"
gpae() {
  local gtclone_dir="$HOME/.gtclone"

  if [[ ! -d "$gtclone_dir" ]]; then
    echo "Error: The ~/.gtclone directory does not exist."
    return 1
  fi

  if ! cd "$gtclone_dir"; then
    echo "Error: Unable to change into the ~/.gtclone directory."
    return 1
  fi

  local repositories=($(find . -name '.git' -type d | sed 's/\/.git//'))
  local total=${#repositories[@]}
  local completed=0

  for dir in "${repositories[@]}"; do
    ((completed++))
    echo -e "\033[1;34mUpdating project (\033[0m\033[1;36m$completed/$total\033[0m\033[1;34m) in:\033[0m \033[1;36m$dir\033[0m"
    (cd "$dir" && git reset --hard && git pull &)
  done

  wait
}
gpae() {
  local repositories=($(find . -name '.git' -type d | sed 's/\/.git//'))
  local total=${#repositories[@]}
  local completed=0

  for dir in "${repositories[@]}"; do
    ((completed++))
    echo -e "\033[1;34mUpdating project (\033[0m\033[1;36m$completed/$total\033[0m\033[1;34m) in:\033[0m \033[1;36m$dir\033[0m"
    (cd "$dir" && git reset --hard && git pull &)
  done

  wait
}
alias upall="sudo zypper dup --allow-vendor-change -l -y --details --force-resolution --replacefiles ; flatpak update -y ; cd ~/.gtclone && git-pull-all ; git-pull-all-safe ; cd"
alias -g ksu="pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY KDE_SESSION_VERSION=5 KDE_FULL_SESSION=true"
alias -g nvidia-powerstate="cat /sys/bus/pci/devices/0000:01:00.0/power/runtime_status"
alias nvidia-modeset-test="sudo cat /sys/module/nvidia_drm/parameters/modeset"
alias my-ip="wget -qO- https://ipecho.net/plain ; echo"
alias shizuki="adb shell sh /storage/emulated/0/Android/data/moe.shizuku.privileged.api/start.sh"
alias save-kde-session="qdbus org.kde.ksmserver /KSMServer org.kde.KSMServerInterface.saveCurrentSession"
alias -g locate="plocate"
alias -g vim="nvim"
alias -g hx="helix"
alias sudo="sudo "

alias se='__a(){
  local query="$*"
  zypper se --provides "${query}" | rg -v 'srcpackage'
  echo
  flatpak search "${query}"
  echo
  snap search "${query}"
  echo
  nix search nixpkgs "$(query)"
  echo
  unset query
}; __a'

gpae-update () {
    local gtclone_dir="$HOME/.gtclone"

    if [[ ! -d "$gtclone_dir" ]]
    then
        echo "Error: The ~/.gtclone directory does not exist."
        return 1
    fi

    if ! cd "$gtclone_dir"
    then
        echo "Error: Unable to change into the ~/.gtclone directory."
        return 1
    fi

    local repositories=($(find . -name '.git' -type d | sed 's/\/.git//'))
    local total=${#repositories[@]}
    local completed=0

    for dir in "${repositories[@]}"
    do
        ((completed++))
        echo -e "\033[1;34mUpdating project (\033[0m\033[1;36m$completed/$total\033[0m\033[1;34m) in:\033[0m \033[1;36m$dir\033[0m"

        (
            cd "$dir" && git reset --hard && git pull && check_and_build_project
        ) &
    done

    wait
}

check_and_build_project () {
    if [ -f "install.sh" ]; then
        echo -e "\033[1;32mRunning ./install.sh\033[0m"
        ./install.sh
    elif [ -f "CMakeLists.txt" ]; then
        echo -e "\033[1;32mBuilding with CMake\033[0m"
        mkdir -p build && cd build && cmake .. && make
    elif [ -f "setup.py" ]; then
        echo -e "\033[1;32mRunning Python setup.py\033[0m"
        python setup.py install
    elif [ -f "package.json" ]; then
        echo -e "\033[1;32mRunning Node.js/Yarn\033[0m"
        yarn install
    elif [ -f "Makefile" ]; then
        echo -e "\033[1;32mRunning make\033[0m"
        make
    else
        echo -e "\033[1;33mNo build instructions found.\033[0m"
    fi
}

alias ezsh="exec zsh"
alias retroarch="flatpak run org.libretro.RetroArch"
alias flatseal="flatpak run com.github.tchx84.Flatseal"
alias catridges="flatpak run hu.kramo.Cartridges"
alias stremio="flatpak run com.stremio.Stremio"
alias geeqie="flatpak run org.geeqie.Geeqie"
#Main commands
if [ -e /usr/bin/zypper ]; then
alias z='sudo zypper'
alias zh='zypper -h'
alias zhse='zypper -h se'
alias zlicenses='zypper licenses'
alias zps='sudo zypper ps'
alias zshell='sudo zypper shell'
alias zsource-download='sudo zypper source-download'
alias ztos='zypper tos'
alias zvcmp='zypper vcmp'

#Packages commands
alias zin="sudo zypper --no-refresh in"
alias zinr='sudo zypper inr'
alias zrm='sudo zypper rm'
alias zsi='sudo zypper si'
alias zve='sudo zypper ve'
alias zse='__a(){
local query="$*"
zypper --no-refresh se -d "${query}" | rg -v -e 'lang' -e 'debug' -e 'srcpackage'
}; __a'

alias zsee='__a(){
local query="$*"
zypper --no-refresh se -d -f --provides "${query}" | rg -v -e 'lang' -e 'debug' -e 'srcpackage'
}; __a'
#Updates commands
alias zdup='sudo zypper dup --allow-vendor-change -l -y --details --force-resolution --replacefiles'
alias zlp='zypper lp'
alias zlu='zypper lu'
alias zpchk='sudo zypper pchk'
alias zup='sudo zypper up'
alias zpatch='sudo zypper patch'

#Request commands
alias zif='zypper --no-refresh if'
alias zpa='zypper --no-refresh pa'
alias zpatch-info='zypper --no-refresh patch-info'
alias zpattern-info='zypper --no-refresh pattern-info'
alias zproduct-info='zypper --no-refresh product-info'
alias zpch='zypper --no-refresh pch'
alias zpd='zypper --no-refresh pd'
alias zpt='zypper --no-refresh pt'
alias zwp='zypper --no-refresh wp'

#Repositories commands
alias zar='sudo zypper ar'
alias zcl='sudo zypper clean'
alias zlr='zypper lr'
alias zmr='sudo zypper mr'
alias znr='sudo zypper nr'
alias zref='sudo zypper ref'
alias zrr='sudo zypper rr'

#Services commands
alias zas='sudo zypper as'
alias zms='sudo zypper ms'
alias zrefs='sudo zypper refs'
alias zrs='sudo zypper rs'
alias zls='zypper ls'

#Package Locks Management commands
alias zal='sudo zypper al'
alias zcl='sudo zypper cl'
alias zll='zypper ll'
alias zrl='sudo zypper rl'

fi
alias yay="pacaptr"
alias speedtest="speedtest-cli --bytes --secure"
alias svim="spacevim"
alias topoff="topgrade ; poweroff"
alias topre="topgrade ; reboot"

alias yuzu="prime-run flatpak run org.yuzu_emu.yuzu"
alias ls="eza --almost-all --dereference --group-directories-first"
alias rl='rlwrap -a'
alias p3='python3'
